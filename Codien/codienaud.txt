/**
 * Hàm chính xử lý sự kiện chỉnh sửa
 */
function onEdit(e) {
  if (!e || !e.range) return;
  
  var sheet = e.range.getSheet();
  var sheetName = sheet.getName();
  var range = e.range;
  var column = range.getColumn();
  var row = range.getRow();
  var value = range.getValue();

  // 1. Xử lý cho sheet Tonghop
  if (sheetName === "Tonghop") {
    if ((column === 27 || column === 28) && row >= 3 && row <= 50 && value === "Thêm ngày giờ") {
      setDateTime(range);
    }
    if (column === 3 && row >= 3 && row <= 50) {
      updateDependentDropdown(sheet, row);
    }
    return;
  }
  
  // 2. Xử lý cho sheet Báo cáo
  if (sheetName === "Báo cáo" && range.getA1Notation() === "D5") {
    updateDynamicDropdown(value);
    updateQueryFormula(value);
  }
}

function updateDynamicDropdown(selectedOption) {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var tonghopSheet = ss.getSheetByName("Tonghop");
  var baoCaoSheet = ss.getSheetByName("Báo cáo");
  
  // Ánh xạ loại người phụ trách với cột dữ liệu tương ứng
  var columnMap = {
    "Người phụ trách chính": "E",  // Cột E
    "Người phụ trách phụ": "F",    // Cột F
    "Máy": "D",         // Cột G
    "Tình trạng công việc": "G"          // Cột H
    // Thêm các ánh xạ khác nếu cần
  };
  
  var sourceColumn = columnMap[selectedOption];
  if (!sourceColumn) return; // Nếu không có ánh xạ thì thoát
  
  // Lấy dữ liệu từ cột tương ứng
  var namesRange = tonghopSheet.getRange(sourceColumn + "3:" + sourceColumn + "100");
  var namesData = namesRange.getValues();
  
  // Lọc giá trị không trống và không trùng lặp
  var uniqueNames = [];
  var nameSet = {};
  
  for (var i = 0; i < namesData.length; i++) {
    var name = namesData[i][0];
    if (name && name.toString().trim() !== "" && !nameSet[name]) {
      uniqueNames.push(name);
      nameSet[name] = true;
    }
  }
  
  // Tạo data validation cho ô F5
  if (uniqueNames.length > 0) {
    var rule = SpreadsheetApp.newDataValidation()
      .requireValueInList(uniqueNames, true)
      .build();
    baoCaoSheet.getRange("F5").setDataValidation(rule);
    
    // Xóa giá trị cũ nếu không còn trong danh sách
    var currentValue = baoCaoSheet.getRange("F5").getValue();
    if (currentValue && !uniqueNames.includes(currentValue)) {
      baoCaoSheet.getRange("F5").clearContent();
    }
  } else {
    baoCaoSheet.getRange("F5").clearDataValidation().clearContent();
  }
}

function updateQueryFormula(selectedOption) {
  var baoCaoSheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName("Báo cáo");
  
  // Ánh xạ công thức QUERY theo từng loại
  var queryMap = {
    "Người phụ trách chính": 'SELECT A,B,D,G,J WHERE E = \'"&F5&"\'',
    "Người phụ trách phụ": 'SELECT A,B,D,G,J WHERE F = \'"&F5&"\'',
    "Máy": 'SELECT A,B,D,G,E,F,J WHERE D = \'"&F5&"\'',
    "Tình trạng công việc": 'SELECT A,B,D,G,E,F,J WHERE G = \'"&F5&"\''
    // Thêm các ánh xạ khác nếu cần
  };
  
  var queryCondition = queryMap[selectedOption];
  if (queryCondition) {
    var fullQuery = '=QUERY(Tonghop!A2:L100; "' + queryCondition + 
                   ' AND H >= date \'"&TEXT(D2;"yyyy-mm-dd")&"\' ' + 
                   'AND I <= date \'"&TEXT(F2;"yyyy-mm-dd")&"\'")';
    baoCaoSheet.getRange("B8").setFormula(fullQuery);
  }
}


/**
 * Hàm thêm ngày giờ hiện tại vào ô
 */
function setDateTime(range) {
  try {
    var now = new Date();
    var formattedDate = Utilities.formatDate(now, Session.getScriptTimeZone(), "dd/MM/yyyy HH:mm");
    range.setValue(formattedDate);
  } catch (error) {
    console.error("Lỗi khi thêm ngày giờ:", error);
    SpreadsheetApp.getUi().alert("Lỗi khi thêm ngày giờ: " + error.message);
  }
}

/**
 * Tạo dropdown chính khi mở sheet
 */
function onOpen() {
  createValidationForMainCategories();
  
  // Thêm menu tùy chỉnh
  SpreadsheetApp.getUi()
    .createMenu('Tùy chỉnh')
    .addItem('Cập nhật danh sách', 'createValidationForMainCategories')
    .addToUi();
}

/**
 * Tạo validation cho dropdown chính (cột C)
 */
function createValidationForMainCategories() {
  try {
    var ss = SpreadsheetApp.getActiveSpreadsheet();
    var sheet = ss.getSheetByName("Tonghop"); // Áp dụng cho sheet Tonghop
    
    if (!sheet) {
      throw new Error('Không tìm thấy sheet "Tonghop"');
    }
    
    var range = sheet.getRange('C3:C50');
    var machineData = getMachineData();
    var categories = Object.keys(machineData);
    
    if (categories.length > 0) {
      var rule = SpreadsheetApp.newDataValidation()
        .requireValueInList(categories, true)
        .setAllowInvalid(false)
        .build();
      
      range.setDataValidation(rule);
      
      // Kiểm tra và xóa giá trị không hợp lệ
      var values = range.getValues();
      values.forEach((val, i) => {
        if (val[0] && !categories.includes(val[0])) {
          range.offset(i, 0, 1, 1).clearContent();
        }
      });
    }
  } catch (error) {
    console.error('Lỗi khi tạo validation:', error);
    SpreadsheetApp.getUi().alert('Lỗi: ' + error.message);
  }
}

/**
 * Cập nhật dropdown phụ thuộc (cột D)
 */
function updateDependentDropdown(sheet, row) {
  try {
    var mainCategory = sheet.getRange('C' + row).getValue();
    var dependentCell = sheet.getRange('D' + row);
    
    // Xóa nội dung và validation cũ
    dependentCell.clearContent();
    dependentCell.clearDataValidations();
    
    if (mainCategory) {
      var machineData = getMachineData();
      var machines = machineData[mainCategory];
      
      if (machines && machines.length > 0) {
        var rule = SpreadsheetApp.newDataValidation()
          .requireValueInList(machines, true)
          .setAllowInvalid(false)
          .build();
        
        dependentCell.setDataValidation(rule);
      }
    }
  } catch (error) {
    console.error('Lỗi khi cập nhật dropdown phụ thuộc:', error);
  }
}

/**
 * Lấy dữ liệu máy từ sheet Data
 */
function getMachineData() {
  try {
    var dataSheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Data');
    if (!dataSheet) {
      throw new Error('Không tìm thấy sheet "Data"');
    }
    
    var machineData = {};
    var columns = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K'];
    var rowCount = 10;
    
    columns.forEach(column => {
      var columnData = dataSheet.getRange(`${column}1:${column}${rowCount}`)
        .getValues()
        .flat()
        .filter(value => value !== '');
      
      if (columnData.length > 1) {
        var categoryName = columnData[0];
        var machines = columnData.slice(1).filter(m => m.trim() !== '');
        
        if (machines.length > 0) {
          machineData[categoryName] = machines;
        }
      }
    });
    
    return machineData;
  } catch (error) {
    console.error('Lỗi khi lấy dữ liệu máy:', error);
    return {};
  }
}