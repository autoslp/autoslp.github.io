// Google Apps Script ho√†n ch·ªânh - Sao ch√©p to√†n b·ªô code n√†y v√†o Google Apps Script Editor

// Thay th·∫ø b·∫±ng ID Google Sheets c·ªßa b·∫°n
const SHEET_ID = 'YOUR_GOOGLE_SHEET_ID_HERE';
const SHEET_NAME = 'Sheet1'; // Thay ƒë·ªïi t√™n sheet n·∫øu c·∫ßn

// H√†m doGet - b·∫Øt bu·ªôc ph·∫£i c√≥
function doGet(e) {
  return ContentService
    .createTextOutput('Google Apps Script is running!')
    .setMimeType(ContentService.MimeType.TEXT);
}

// H√†m doPost - x·ª≠ l√Ω d·ªØ li·ªáu t·ª´ form
function doPost(e) {
  try {
    // Ki·ªÉm tra xem c√≥ d·ªØ li·ªáu kh√¥ng
    if (!e.postData || !e.postData.contents) {
      throw new Error('Kh√¥ng c√≥ d·ªØ li·ªáu ƒë∆∞·ª£c g·ª≠i');
    }
    
    // M·ªü Google Sheets
    const sheet = SpreadsheetApp.openById(SHEET_ID).getSheetByName(SHEET_NAME);
    
    // Parse d·ªØ li·ªáu JSON t·ª´ form
    const data = JSON.parse(e.postData.contents);
    
    // T·∫°o timestamp
    const timestamp = Utilities.formatDate(new Date(), Session.getScriptTimeZone(), 'dd/MM/yyyy HH:mm:ss');
    
    // Chu·∫©n b·ªã d·ªØ li·ªáu ƒë·ªÉ th√™m v√†o sheet
    // Th·ª© t·ª± c·ªôt kh·ªõp v·ªõi b·∫£ng Google Sheets c·ªßa b·∫°n
    const rowData = [
      data.tencongviec || '',           // Vi·ªác c·∫ßn l√†m
      '',                               // C·∫•p ƒë·ªô (ƒë·ªÉ tr·ªëng)
      data.vitrilam || '',              // V·ªã tr√≠ l√†m
      data.may || '',                   // M√°y
      data.nguoithuchienchinh || '',    // Ng∆∞·ªùi th·ª±c hi·ªán ch√≠nh
      data.nguoithuchienph1 || '',      // Ng∆∞·ªùi th·ª±c hi·ªán ph·ª• 1
      data.trangthai || 'Ch∆∞a b·∫Øt ƒë·∫ßu', // Tr·∫°ng th√°i
      data.ngaybatdau || '',            // Ng√†y b·∫Øt ƒë·∫ßu
      data.ngayketthuc || '',           // Ng√†y k·∫øt th√∫c
      data.ghichu || '',                // Ghi ch√∫
      timestamp                         // Th·ªùi gian t·∫°o
    ];
    
    // Th√™m d·ªØ li·ªáu v√†o sheet
    sheet.appendRow(rowData);
    
    // Log ƒë·ªÉ debug
    console.log('D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c th√™m:', rowData);
    
    // Tr·∫£ v·ªÅ k·∫øt qu·∫£ th√†nh c√¥ng
    return ContentService
      .createTextOutput(JSON.stringify({
        status: 'success',
        message: 'D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c l∆∞u th√†nh c√¥ng!',
        timestamp: timestamp
      }))
      .setMimeType(ContentService.MimeType.JSON);
      
  } catch (error) {
    // Log l·ªói
    console.error('L·ªói trong doPost:', error);
    
    // Tr·∫£ v·ªÅ l·ªói
    return ContentService
      .createTextOutput(JSON.stringify({
        status: 'error',
        message: 'L·ªói: ' + error.toString()
      }))
      .setMimeType(ContentService.MimeType.JSON);
  }
}

// H√†m test ƒë·ªÉ ki·ªÉm tra k·∫øt n·ªëi v·ªõi Google Sheets
function testConnection() {
  try {
    const sheet = SpreadsheetApp.openById(SHEET_ID).getSheetByName(SHEET_NAME);
    console.log('‚úÖ K·∫øt n·ªëi th√†nh c√¥ng v·ªõi Google Sheets!');
    console.log('üìä T√™n sheet:', sheet.getName());
    console.log('üìù S·ªë h√†ng hi·ªán t·∫°i:', sheet.getLastRow());
    console.log('üìã S·ªë c·ªôt hi·ªán t·∫°i:', sheet.getLastColumn());
    return true;
  } catch (error) {
    console.error('‚ùå L·ªói k·∫øt n·ªëi:', error.toString());
    return false;
  }
}

// H√†m test th√™m d·ªØ li·ªáu m·∫´u
function testAddSampleData() {
  try {
    const sheet = SpreadsheetApp.openById(SHEET_ID).getSheetByName(SHEET_NAME);
    const timestamp = Utilities.formatDate(new Date(), Session.getScriptTimeZone(), 'dd/MM/yyyy HH:mm:ss');
    
    const sampleData = [
      'Test c√¥ng vi·ªác',
      'C·∫•p ƒë·ªô 1',
      'Khu v·ª±c test',
      'M√°y test',
      'Mr Test',
      'Mr Helper',
      'ƒêang th·ª±c hi·ªán',
      '01/01/2024',
      '02/01/2024',
      'ƒê√¢y l√† test',
      timestamp
    ];
    
    sheet.appendRow(sampleData);
    console.log('‚úÖ ƒê√£ th√™m d·ªØ li·ªáu test th√†nh c√¥ng!');
    return true;
  } catch (error) {
    console.error('‚ùå L·ªói khi th√™m d·ªØ li·ªáu test:', error.toString());
    return false;
  }
}
